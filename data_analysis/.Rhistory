fill = 'Predictor type',
pattern = "Predictor type"
) +
scale_pattern_manual(values=c(Interpolated = "circle", Human = "none")) +
scale_y_continuous(labels = function(y) paste0(y, "°"),expand = c(0, 0), limits=c(0,19)) +
scale_fill_manual(values=tableau_palette) +
facet_grid(cols=vars(type)) +
geom_point(data=interpolated_errors) +
theme_classic() +
theme(
axis.title.x=element_blank(),
strip.background = element_blank()
)
interpolation_plot
interpolated_errors = errors_df %>%
subset(predictor_type!='Human') %>%
group_by(pretty_condition,type) %>%
summarize(error = mean(error)) %>%
mutate(predictor_type = 'Bootstrap')
interpolation_plot = long_data %>%
ggplot(aes(x=pretty_condition,
y=error, fill=pretty_condition, pattern=predictor_type)) +
geom_bar_pattern(stat='identity', position=position_dodge(0.9),
pattern_density = 0.3,
pattern_spacing = 0.015,
pattern_fill="black",
pattern_angle = 45,
pattern_alpha = 0.6) +
geom_errorbar(aes(ymin=error - se, ymax=error+se),
size=0.7, width=0.4, position=position_dodge(0.9)) +
labs(
x = 'Model assistance',
y = 'Mean absolute error',
fill = 'Predictor type',
pattern = "Predictor type"
) +
scale_pattern_manual(values=c(Interpolated = "circle", Human = "none")) +
scale_y_continuous(labels = function(y) paste0(y, "°"),expand = c(0, 0), limits=c(0,19)) +
scale_fill_manual(values=tableau_palette) +
facet_grid(cols=vars(type)) +
geom_point(data=interpolated_errors) +
theme_classic() +
theme(
axis.title.x=element_blank(),
strip.background = element_blank()
)
interpolation_plot
interpolated_errors = errors_df %>%
subset(predictor_type!='Human') %>%
group_by(pretty_condition,type) %>%
summarize(error = mean(error)) %>%
mutate(predictor_type = 'Interpolated')
interpolation_plot = long_data %>%
ggplot(aes(x=pretty_condition,
y=error, fill=pretty_condition, pattern=predictor_type)) +
geom_bar_pattern(stat='identity', position=position_dodge(0.9),
pattern_density = 0.3,
pattern_spacing = 0.015,
pattern_fill="black",
pattern_angle = 45,
pattern_alpha = 0.6) +
geom_errorbar(aes(ymin=error - se, ymax=error+se),
size=0.7, width=0.4, position=position_dodge(0.9)) +
labs(
x = 'Model assistance',
y = 'Mean absolute error',
fill = 'Predictor type',
pattern = "Predictor type"
) +
scale_pattern_manual(values=c(Interpolated = "circle", Human = "none")) +
scale_y_continuous(labels = function(y) paste0(y, "°"),expand = c(0, 0), limits=c(0,19)) +
scale_fill_manual(values=tableau_palette) +
facet_grid(cols=vars(type)) +
geom_point(data=interpolated_errors) +
theme_classic() +
theme(
axis.title.x=element_blank(),
strip.background = element_blank()
)
interpolation_plot
interpolation_plot
interpolation_plot = long_data %>%
ggplot(aes(x=pretty_condition,
y=error, fill=pretty_condition, pattern=predictor_type)) +
geom_bar_pattern(stat='identity', position=position_dodge(0.9),
pattern_density = 0.3,
pattern_spacing = 0.015,
pattern_fill="black",
pattern_angle = 45,
pattern_alpha = 0.6) +
geom_errorbar(aes(ymin=error - se, ymax=error+se),
size=0.7, width=0.4, position=position_dodge(0.9)) +
labs(
x = 'Model assistance',
y = 'Mean absolute error',
fill = 'Predictor type',
pattern = "Predictor type"
) +
scale_pattern_manual(values=c(Interpolated = "circle", Human = "none")) +
scale_y_continuous(labels = function(y) paste0(y, "°"),expand = c(0, 0), limits=c(0,19)) +
scale_fill_manual(values=tableau_palette) +
facet_grid(cols=vars(type)) +
# geom_point(data=interpolated_errors) +
theme_classic() +
theme(
axis.title.x=element_blank(),
strip.background = element_blank()
)
interpolation_plot
ggsave("final_plots/interpolation_plot_TEMP.pdf", interpolation_plot, width = 9, height = 5, units = "in")
interpolation_plot = long_data %>%
ggplot(aes(x=pretty_condition,
y=error, fill=pretty_condition, pattern=predictor_type)) +
geom_bar_pattern(stat='identity', position=position_dodge(0.9),
pattern_density = 0.3,
pattern_spacing = 0.015,
pattern_fill="black",
pattern_angle = 45,
pattern_alpha = 0.6) +
geom_errorbar(aes(ymin=error - se, ymax=error+se),
size=0.7, width=0.4, position=position_dodge(0.9)) +
labs(
x = 'Model assistance',
y = 'Mean absolute error',
fill = 'Predictor type',
pattern = "Predictor type"
) +
scale_pattern_manual(values=c(Interpolated = "circle", Human = "none")) +
scale_y_continuous(labels = function(y) paste0(y, "°"),expand = c(0, 0), limits=c(0,19)) +
scale_fill_manual(values=tableau_palette) +
facet_grid(cols=vars(type)) +
geom_point(data=interpolated_errors) +
theme_classic() +
theme(
axis.title.x=element_blank(),
strip.background = element_blank()
)
ggsave("final_plots/interpolation_plot_TEMP.pdf", interpolation_plot, width = 9, height = 5, units = "in")
interpolation_plot = long_data %>%
ggplot(aes(x=pretty_condition,
y=error, fill=pretty_condition, pattern=predictor_type)) +
geom_bar_pattern(stat='identity', position=position_dodge(0.9),
pattern_density = 0.3,
pattern_spacing = 0.015,
pattern_fill="black",
pattern_angle = 45,
pattern_alpha = 0.6) +
geom_errorbar(aes(ymin=error - se, ymax=error+se),
size=0.7, width=0.4, position=position_dodge(0.9)) +
labs(
x = 'Model assistance',
y = 'Mean absolute error',
fill = 'Predictor type',
pattern = "Predictor type"
) +
scale_pattern_manual(values=c(Interpolated = "circle", Human = "none")) +
scale_y_continuous(labels = function(y) paste0(y, "°"),expand = c(0, 0), limits=c(0,19)) +
scale_fill_manual(values=tableau_palette) +
facet_grid(cols=vars(type)) +
geom_point(data=interpolated_errors,shape=8)+
theme_classic() +
theme(
axis.title.x=element_blank(),
strip.background = element_blank()
)
ggsave("final_plots/interpolation_plot_TEMP.pdf", interpolation_plot, width = 9, height = 5, units = "in")
interpolation_plot = long_data %>%
ggplot(aes(x=pretty_condition,
y=error, fill=pretty_condition, pattern=predictor_type)) +
geom_bar_pattern(stat='identity', position=position_dodge(0.9),
pattern_density = 0.3,
pattern_spacing = 0.015,
pattern_fill="black",
pattern_angle = 45,
pattern_alpha = 0.6) +
geom_errorbar(aes(ymin=error - se, ymax=error+se),
size=0.7, width=0.4, position=position_dodge(0.9)) +
labs(
x = 'Model assistance',
y = 'Mean absolute error',
fill = 'Predictor type',
pattern = "Predictor type"
) +
scale_pattern_manual(values=c(Interpolated = "circle", Human = "none")) +
scale_y_continuous(labels = function(y) paste0(y, "°"),expand = c(0, 0), limits=c(0,19)) +
scale_fill_manual(values=tableau_palette) +
facet_grid(cols=vars(type)) +
geom_point(data=interpolated_errors,shape=18)+
theme_classic() +
theme(
axis.title.x=element_blank(),
strip.background = element_blank()
)
ggsave("final_plots/interpolation_plot_TEMP.pdf", interpolation_plot, width = 9, height = 5, units = "in")
interpolation_plot = long_data %>%
ggplot(aes(x=pretty_condition,
y=error, fill=pretty_condition, pattern=predictor_type)) +
geom_bar_pattern(stat='identity', position=position_dodge(0.9),
pattern_density = 0.3,
pattern_spacing = 0.015,
pattern_fill="black",
pattern_angle = 45,
pattern_alpha = 0.6) +
geom_errorbar(aes(ymin=error - se, ymax=error+se),
size=0.7, width=0.4, position=position_dodge(0.9)) +
labs(
x = 'Model assistance',
y = 'Mean absolute error',
fill = 'Predictor type',
pattern = "Predictor type"
) +
scale_pattern_manual(values=c(Interpolated = "circle", Human = "none")) +
scale_y_continuous(labels = function(y) paste0(y, "°"),expand = c(0, 0), limits=c(0,19)) +
scale_fill_manual(values=tableau_palette) +
facet_grid(cols=vars(type)) +
geom_point(data=interpolated_errors,shape=18,size=3)+
theme_classic() +
theme(
axis.title.x=element_blank(),
strip.background = element_blank()
)
ggsave("final_plots/interpolation_plot_TEMP.pdf", interpolation_plot, width = 9, height = 5, units = "in")
interpolation_plot = long_data %>%
ggplot(aes(x=pretty_condition,
y=error, fill=pretty_condition, pattern=predictor_type)) +
geom_bar_pattern(stat='identity', position=position_dodge(0.9),
pattern_density = 0.3,
pattern_spacing = 0.015,
pattern_fill="black",
pattern_angle = 45,
pattern_alpha = 0.6) +
geom_errorbar(aes(ymin=error - se, ymax=error+se),
size=0.7, width=0.4, position=position_dodge(0.9)) +
labs(
x = 'Model assistance',
y = 'Mean absolute error',
fill = 'Predictor type',
pattern = "Predictor type"
) +
scale_pattern_manual(values=c(Interpolated = "circle", Human = "none")) +
scale_y_continuous(labels = function(y) paste0(y, "°"),expand = c(0, 0), limits=c(0,19)) +
scale_fill_manual(values=tableau_palette) +
facet_grid(cols=vars(type)) +
geom_point(data=interpolated_errors,shape=8,size=3)+
theme_classic() +
theme(
axis.title.x=element_blank(),
strip.background = element_blank()
)
ggsave("final_plots/interpolation_plot_TEMP.pdf", interpolation_plot, width = 9, height = 5, units = "in")
interpolation_plot = long_data %>%
ggplot(aes(x=pretty_condition,
y=error, fill=pretty_condition, pattern=predictor_type)) +
geom_bar_pattern(stat='identity', position=position_dodge(0.9),
pattern_density = 0.3,
pattern_spacing = 0.015,
pattern_fill="black",
pattern_angle = 45,
pattern_alpha = 0.6) +
geom_errorbar(aes(ymin=error - se, ymax=error+se),
size=0.7, width=0.4, position=position_dodge(0.9)) +
labs(
x = 'Model assistance',
y = 'Mean absolute error',
fill = 'Predictor type',
pattern = "Predictor type"
) +
scale_pattern_manual(values=c(Interpolated = "circle", Human = "none")) +
scale_y_continuous(labels = function(y) paste0(y, "°"),expand = c(0, 0), limits=c(0,19)) +
scale_fill_manual(values=tableau_palette) +
facet_grid(cols=vars(type)) +
geom_point(data=interpolated_errors,size=3)+
theme_classic() +
theme(
axis.title.x=element_blank(),
strip.background = element_blank()
)
ggsave("final_plots/interpolation_plot_TEMP.pdf", interpolation_plot, width = 9, height = 5, units = "in")
interpolation_plot = long_data %>%
ggplot(aes(x=pretty_condition,
y=error, fill=pretty_condition, pattern=predictor_type)) +
geom_bar_pattern(stat='identity', position=position_dodge(0.9),
pattern_density = 0.3,
pattern_spacing = 0.015,
pattern_fill="black",
pattern_angle = 45,
pattern_alpha = 0.6) +
geom_errorbar(aes(ymin=error - se, ymax=error+se),
size=0.7, width=0.4, position=position_dodge(0.9)) +
labs(
x = 'Model assistance',
y = 'Mean absolute error',
fill = 'Predictor type',
pattern = "Predictor type"
) +
scale_pattern_manual(values=c(Interpolated = "circle", Human = "none")) +
scale_y_continuous(labels = function(y) paste0(y, "°"),expand = c(0, 0), limits=c(0,19)) +
scale_fill_manual(values=tableau_palette) +
facet_grid(cols=vars(type)) +
geom_point(data=interpolated_errors,size=2)+
theme_classic() +
theme(
axis.title.x=element_blank(),
strip.background = element_blank()
)
ggsave("final_plots/interpolation_plot_TEMP.pdf", interpolation_plot, width = 9, height = 5, units = "in")
interpolation_plot = long_data %>%
ggplot(aes(x=pretty_condition,
y=error, fill=pretty_condition, pattern=predictor_type)) +
geom_bar_pattern(stat='identity', position=position_dodge(0.9),
pattern_density = 0.3,
pattern_spacing = 0.015,
pattern_fill="black",
pattern_angle = 45,
pattern_alpha = 0.6) +
geom_errorbar(aes(ymin=error - se, ymax=error+se),
size=0.7, width=0.4, position=position_dodge(0.9)) +
labs(
x = 'Model assistance',
y = 'Mean absolute error',
fill = 'Predictor type',
pattern = "Predictor type"
) +
scale_pattern_manual(values=c(Interpolated = "circle", Human = "none")) +
scale_y_continuous(labels = function(y) paste0(y, "°"),expand = c(0, 0), limits=c(0,19)) +
scale_fill_manual(values=tableau_palette) +
facet_grid(cols=vars(type)) +
geom_point(data=interpolated_errors,shape=18,size=2)+
theme_classic() +
theme(
axis.title.x=element_blank(),
strip.background = element_blank()
)
ggsave("final_plots/interpolation_plot_TEMP.pdf", interpolation_plot, width = 9, height = 5, units = "in")
interpolation_plot = long_data %>%
ggplot(aes(x=pretty_condition,
y=error, fill=pretty_condition, pattern=predictor_type)) +
geom_bar_pattern(stat='identity', position=position_dodge(0.9),
pattern_density = 0.3,
pattern_spacing = 0.015,
pattern_fill="black",
pattern_angle = 45,
pattern_alpha = 0.6) +
geom_errorbar(aes(ymin=error - se, ymax=error+se),
size=0.7, width=0.4, position=position_dodge(0.9)) +
labs(
x = 'Model assistance',
y = 'Mean absolute error',
fill = 'Predictor type',
pattern = "Predictor type"
) +
scale_pattern_manual(values=c(Interpolated = "circle", Human = "none")) +
scale_y_continuous(labels = function(y) paste0(y, "°"),expand = c(0, 0), limits=c(0,19)) +
scale_fill_manual(values=tableau_palette) +
facet_grid(cols=vars(type)) +
geom_point(data=interpolated_errors,shape=18,size=3)+
theme_classic() +
theme(
axis.title.x=element_blank(),
strip.background = element_blank()
)
ggsave("final_plots/interpolation_plot_TEMP.pdf", interpolation_plot, width = 9, height = 5, units = "in")
average_error_by_city = city_data %>%
ggplot(aes(x=pretty_condition,y=average_error,color=pretty_condition,shape=pretty_condition)) +
geom_point(size=2) +
geom_errorbar(aes(ymin=average_error-average_error_se,ymax=average_error+average_error_se),
width=0.45,size=0.7) +
facet_wrap(. ~ ordered_predictor_city, ncol=8) +
scale_color_manual(values = tableau_palette) +
scale_y_continuous(labels = function(y) paste0(y, "°")) +
labs(
y='Mean absolute error',
color='Condition',
) +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
legend.position='bottom'
)
ggsave("final_plots/average_error_by_city_TEMP.pdf", average_error_by_city, width = 9, height = 6, units = "in")
humans_vs_cities
df_long
# Plot
humans_vs_cities = df_long %>%
mutate(method = factor(method,levels=c('Human','Chosen cities'))) %>%
ggplot(aes(x = type, y = average, fill = method)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin=average - se,ymax = average+se),
size=0.7,width=0.45,position=position_dodge(0.9)) +
scale_y_continuous(labels = function(y) paste0(y, "°"),expand = c(0, 0), limits=c(0,18)) +
scale_fill_manual(values=c("#B07AA1","#BAB0AC")) +
theme_classic() +
theme(axis.title.x=element_blank()) +
labs(y = "Mean absolute error", x = "Type", fill = "Predictor type")
humans_vs_cities
ggsave("final_plots/humans_vs_cities.pdf", humans_vs_cities, width = 5, height = 4.5, units = "in")
humans_vs_cities
# Plot
humans_vs_cities = df_long %>%
mutate(method = factor(method,levels=c('Human','Chosen cities'))) %>%
ggplot(aes(x = type, y = average, fill = method)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin=average - se,ymax = average+se),
size=0.7,width=0.45,position=position_dodge(0.9)) +
scale_y_continuous(labels = function(y) paste0(y, "°"),expand = c(0, 0), limits=c(0,18)) +
scale_fill_manual(values=c("#B07AA1","#BAB0AC")) +
theme_classic() +
theme(axis.title.x=element_blank()) +
labs(y = "Mean absolute error", x = "Type", fill = "Predictor type")
ggsave("final_plots/humans_vs_cities.pdf", humans_vs_cities, width = 5, height = 4.5, units = "in")
humans_vs_cities
experts_vs_cities
# Reshape data
df_long_expert = grouped_data_expert %>%
pivot_longer(
cols = c(starts_with("average"), starts_with("se")),
names_to = c(".value", "method"),
names_pattern = "(.+)_(.*)_error"
)
# Change the method names to "human" and "model"
df_long_expert$method <- ifelse(df_long_expert$method == "human", "Experts", "Chosen cities")
# Plot
experts_vs_cities = df_long_expert %>%
mutate(method = factor(method,levels=c('Experts',"Chosen cities"))) %>%
ggplot(aes(x = type, y = average, fill = method)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin=average - se,ymax = average+se),
size=0.7,width=0.45,position=position_dodge(0.9)) +
scale_y_continuous(labels = function(y) paste0(y, "°"),expand = c(0, 0), limits=c(0,18)) +
scale_fill_manual(values=c("#B07AA1","#BAB0AC")) +
theme_classic() +
theme(axis.title.x=element_blank()) +
labs(y = "Mean absolute error", x = "Type", fill = "Predictor type")
ggsave("final_plots/experts_vs_cities.pdf", experts_vs_cities,width = 5, height = 4.5, units = "in")
experiment_data %>%
group_by(type,condition) %>%
summarize(average_error=mean(abs_error))
experiment_data %>%
group_by(type,condition) %>%
summarize(average_error=round(mean(abs_error),2))
14.5-9.73
15.9-12.5
17.9-15.9
experiment_data %>%
group_by(type,condition) %>%
summarize(
average_error=means(abs_error),
average_bootstrap_error=mean(bootstrap_error)
)
experiment_data %>%
group_by(type,condition) %>%
summarize(
average_error=mean(abs_error),
average_bootstrap_error=mean(bootstrap_error)
)
14.5-9.82
15.9-11.8
17.9-14.6
# Load pilot data
experiment_hits = c(
'3TTPFEFXCTP55PLBCVCFYHKFEQCH6O',
'3PCPFX4U40VE1BDPWE2D11PTYDHQF4',
'3RWO3EJELHE2BKI2P283CUVPS8L1PY',
'3BAWBGQGYL4TRQU00UYBJWBKHJRV7H',
'3BAWBGQGYL4TRQU00UYBJWBKHJUV7K'
)
load_experiment_data2 = function(hit_id_list){
experiment_data = load_experiments(hit_id_list)
return (experiment_data)
}
ed = load_experiment_data2(experiment_hits)
colnames(ed)
ed$start_time[1]
ed$ed$start_time[1][1]
ed$start_time[1][1]
ed$user_agent[1]
ed$all_experiment_data[1]
library(lubridate)
knitr::opts_chunk$set(echo = TRUE)
# Loop through experiment hits
all_worker_data = data.frame()
for (hit_i in experiment_hits){
file_string = paste0('../experiment_data/',hit_i,'/worker_data.csv')
worker_data = read.csv(file_string)
all_worker_data = rbind(all_worker_data,worker_data)
}
nrow(all_worker_data)
all_worker_data$start_time_date = ymd_hms(all_worker_data$first_page_submit_time)
all_worker_data$end_time_date = yms_hms(all_worker_data$end_time)
all_worker_data$end_time_date = ymd_hms(all_worker_data$end_time)
all_worker_data$experiment_duration = all_worker_data$end_time_date-all_worker_data$start_time_date
all_worker_data$experiment_duration
all_worker_data$end_time_date[1]
all_worker_data$end_time_date[1]
all_worker_data$start_time_date[1]
all_worker_data$experiment_duration[1]
mean(all_worker_data$experiment_duration)
.67035 * 60
min(all_worker_data$experiment_duration)
all_worker_data$wage = 1.50 / (all_worker_data$experiment_duration / 60)
all_worker_data$wage = (all_worker_data$experiment_duration / 60) * (1/1.5)
mean(all_worker_data$wage)
all_worker_data$experiment_duration / 60
all_worker_data$wage = 1.50 / (all_worker_data$experiment_duration / 60)
all_worker_data$experiment_duration / 60
1.50/0.13799222
all_worker_data$wage = as.numeric(all_worker_data$experiment_duration / 60) * (1/1.5)
all_worker_data$wage
all_worker_data$wage = (1/as.numeric(all_worker_data$experiment_duration / 60)) * 1.5
all_worker_data$wage
mean(all_worker_data$wage)
